<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto">

    <data>
        <variable
            name="viewModel"
            type="com.will.beatbox.viewmodel.SoundViewModel" />
    </data>
    <!--在绑定类上定义了一个名为 viewModel 的属性，同时还包括 getter 和 setter 方法-->
    <!--
    1. <data> 标签：
        这个标签在数据绑定布局文件中定义了可以在布局中使用的变量。
        它通常位于布局文件的根元素内，但在其他视图元素之前。
    2. <variable> 标签：
        在 <data> 标签内，我们可以定义一个或多个 <variable> 标签。
        每个 <variable> 标签声明了一个可以在布局中使用的变量。
    3. name="viewModel"：
        这定义了变量的名称。在这个例子中，变量名是 "viewModel"。
        这个名称可以在布局文件的其他部分中使用，以引用这个变量。
    4. type="com.will.beatbox.viewmodel.SoundViewModel"：
        这指定了变量的类型。
        在这个例子中，类型是 com.will.beatbox.viewmodel.SoundViewModel，这可能是一个自定义的 ViewModel 类。
    -->

    <!--外面封装一层 frame 布局，当需要拉伸适配屏幕时，frame 会被拉伸，而按钮不会-->

    <FrameLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_margin="4dp">

        <Button
            android:layout_width="100dp"
            android:layout_height="100dp"
            android:layout_gravity="center"
            android:text="@{`File name:` + viewModel.title?? `No file`}"
            android:onClick="@{(view)->viewModel.onButtonClick()}"
            tools:text="Sound name"/>

    </FrameLayout>


    <!--使用方法，定义的 name 调用对应类拥有的属性
        在绑定的大括号里面，可以写一些简单的 Java 表达式，
        如链式函数调用，数学计算等
    -->
    <!--可以设置监听事件 onClick 这样的方法，就不是 View 的 onClick 方法了-->
    <!-- text 文本中拼接字符串时，要用 反 引号 -->

    <!--绑定表达式也有一个 null 值合并操作符 ??-->

    <!--使用 dateBinding 相关属性，设定值的时候，必须用 @{} 的方式-->

    <!-- 使用自己声明的 BindingAdapter 值 app:isGone="@{false}" -->
</layout>